/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: PounUP (https://sketchfab.com/PounUP)
license: CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0/)
source: https://sketchfab.com/3d-models/planet-0104234961624b7aa0cb85d03161babe
title: Planet
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { ObjectSpaceNormalMap } from 'three';
import { Color } from 'three';
import { useFrame } from '@react-three/fiber';

export default function Planet({ ...props }) {
    const group = useRef()
    const { nodes, materials } = useGLTF('/models/planet/scene-transformed.glb')
    for (const mat of Object.keys(materials)) {
        console.log(mat);

    }

    // materials['material_1'].color.set(new Color('white'))

    const matRef = useRef()
    const matRef2 = useRef()
    useFrame(state => {
        group.current.rotation.y = state.clock.elapsedTime * 0.1;
        // matRef.current.rotation.z = state.clock.elapsedTime * 0.1;
    })

    // material
    // material_1
    // material_2
    return (
        <group ref={group} {...props} dispose={null} scale={0.1} position={[50, 10, -50]}>
            <group rotation={[-Math.PI / 2, 0, 0]}>
                <group rotation={[Math.PI / 2, 0, 0]}>
                    <group position={[-1.33, -0.78, 1.17]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
                        <mesh  castShadow receiveShadow geometry={nodes.COMBINE_LP_LAM_0.geometry} material={materials.material} />
                        <mesh ref={matRef}  castShadow receiveShadow geometry={nodes.COMBINE_LP_1_0.geometry} material={materials.material_1} />
                        <mesh ref={matRef2} castShadow receiveShadow geometry={nodes.COMBINE_LP_2_0.geometry} material={materials.material_2} />
                    </group>
                </group>
            </group>
        </group>
    )
}

useGLTF.preload('/models/planet/scene-transformed.glb')
