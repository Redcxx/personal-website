/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Seafoam (https://sketchfab.com/seafoam)
license: CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0/)
source: https://sketchfab.com/3d-models/smoller-gura-gawr-gura-holomyth-3329b7c37a694fd19295e7f68d3471f8
title: Smol(ler) Gura - Gawr Gura, HoloMyth
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { playAnimationsOnClick, useHover } from '../utils/hooks'
import { playAnimationsIndefinitely, setCursorPointerOnHover } from '../utils/utils'
import { LoopRepeat } from 'three'

export default function Gura({ ...props }) {
    const group = useRef()
    const { nodes, materials, animations } = useGLTF('/models/gura/scene-transformed.glb')
    const { actions } = useAnimations(animations, group)

    const [hover, inHandler, outHandler] = useHover()
    setCursorPointerOnHover(hover)

    // const onClickHandler = playAnimationsOnClick([actions.idle], 1)
    useEffect(() => {
        playAnimationsIndefinitely([actions.idle])
    })

    return (
        <group ref={group} {...props} dispose={null} 
        onPointerOver={inHandler}
        onPointerOut={outHandler}
        >
            <group name="Sketchfab_Scene" position={[-6, 0, -1]} rotation={[0, Math.PI / 4, 0]}>
                <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
                    <group name="602119d407e84b63a65dec04bb9b3f9bfbx" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
                        <group name="Object_2">
                            <group name="RootNode">
                                <group name="gurarig" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
                                    <group name="Object_5">
                                        <primitive object={nodes._rootJoint} />
                                        <group name="Object_53" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                                        <skinnedMesh name="Object_54" geometry={nodes.Object_54.geometry} material={materials.SmolGura} skeleton={nodes.Object_54.skeleton} morphTargetDictionary={nodes.Object_54.morphTargetDictionary} morphTargetInfluences={nodes.Object_54.morphTargetInfluences} />
                                        <skinnedMesh name="Object_55" geometry={nodes.Object_55.geometry} material={materials.SmolguraOutline} skeleton={nodes.Object_55.skeleton} morphTargetDictionary={nodes.Object_55.morphTargetDictionary} morphTargetInfluences={nodes.Object_55.morphTargetInfluences} />
                                        <skinnedMesh name="Object_56" geometry={nodes.Object_56.geometry} material={materials.SmolguraHead} skeleton={nodes.Object_56.skeleton} morphTargetDictionary={nodes.Object_56.morphTargetDictionary} morphTargetInfluences={nodes.Object_56.morphTargetInfluences} />
                                        <skinnedMesh name="Object_57" geometry={nodes.Object_57.geometry} material={materials.SmolguraEye} skeleton={nodes.Object_57.skeleton} morphTargetDictionary={nodes.Object_57.morphTargetDictionary} morphTargetInfluences={nodes.Object_57.morphTargetInfluences} />
                                    </group>
                                </group>
                                <group name="smolguramesh" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                            </group>
                        </group>
                    </group>
                </group>
            </group>
        </group>
    )
}

useGLTF.preload('/models/gura/scene-transformed.glb')
