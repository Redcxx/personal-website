/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Yo.Ri (https://sketchfab.com/grox777)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/purple-planet-264eb22207184fc99a5e3b1279a763b8
title: Purple Planet
*/

import React, { useContext, useEffect, useRef } from 'react'
import { useGLTF, useAnimations, useHelper, SpotLight } from '@react-three/drei'
import { playAnimationsIndefinitely } from '../utils/utils'
import { ConfigContext } from '../context/ConfigContext'
import { DirectionalLightHelper } from 'three'
import { SpotLightHelper } from 'three'
import { Color } from 'three'

export default function PurplePlanet({ ...props }) {
    const group = useRef()
    const { nodes, materials, animations } = useGLTF('/models/purpleplanet/scene-transformed.glb')
    const { actions } = useAnimations(animations, group)
    useEffect(() => {
        playAnimationsIndefinitely([actions['Take 01']])
    })
    const config = useContext(ConfigContext)

    const lightRef = useRef()
    useHelper(lightRef, DirectionalLightHelper, 'cyan')

    console.log(materials);
    for (const material of Object.keys(materials)) {
        console.log(materials[material]);
        materials[material].transparent = true
        materials[material].opacity = 0.7
        materials[material].fog = false
        materials[material].emissive = new Color('skyblue')
        materials[material].emissiveIntensity = 100
    }

    return (
        <group ref={group} {...props} dispose={null} position={[50, 5, -50]} rotation={[Math.PI/2, 0, Math.PI/4]}>
            <SpotLight
            // position={[0,0,0]}
                translateY={-5}
                penumbra={0} 
                distance={256} 
                angle={10}
                anglePower={1}
                attenuation={100}
                ref={lightRef}
                intensity={50}
                castShadow={true}
                shadow-bias={-0.00001}  // solve z fighting
                shadow-camera-near={0.1}
                shadow-mapSize-width={config['mapSize']}
                shadow-mapSize-height={config['mapSize']}
                shadow-camera-far={1000}
                shadow-camera-fov={256}
                // decay={1}
                shadow-camera-left={-10}
                shadow-camera-right={10}
                shadow-camera-top={10}
                shadow-camera-bottom={-10}
            />
            <group name="Sketchfab_Scene">
                <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
                    <group name="Root">
                        <group name="Planet" rotation={[0, 0, Math.PI / 2]}>
                            <group name="Clouds_0" rotation={[0, 0, -Math.PI / 2]} scale={1.01}>
                                <mesh name="Clouds_0_0" castShadow receiveShadow geometry={nodes.Clouds_0_0.geometry} material={materials.Clouds_0} />
                            </group>
                            <mesh name="Planet_0" castShadow receiveShadow geometry={nodes.Planet_0.geometry} material={materials.PurplePlanet} />
                        </group>
                        <group name="Clouds_1" scale={1.02}>
                            <mesh name="Clouds_1_0" castShadow receiveShadow geometry={nodes.Clouds_1_0.geometry} material={materials.Clouds_1} />
                        </group>
                    </group>
                </group>
            </group>
        </group>
    )
}

useGLTF.preload('/models/purpleplanet/scene-transformed.glb')
